apiVersion: apps/v1
kind: Deployment
metadata:
  name: micro-collector

spec:
  selector:
    matchLabels:
      app: micro-collector
  replicas: 3

  template:
    metadata:
      labels:
        app: micro-collector
    spec:
      containers:
        - name: micro-collector
          image: micro-collector:lts
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8082

---
apiVersion: v1 # k8s API version
kind: Service
metadata:
  name: micro-collector
spec:
  selector:
    app: micro-collector
  ports:
    - protocol: TCP
      port: 8082 # the port that the service is running on in the cluster
      targetPort: 8082 # the port exposed by the container
  clusterIP: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: micro-recipient

spec:
  selector:
    matchLabels:
      app: micro-recipient
  replicas: 3

  template:
    metadata:
      labels:
        app: micro-recipient
    spec:
      containers:
        - name: micro-recipient
          image: micro-recipient:lts
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081

---
apiVersion: v1 # k8s API version
kind: Service
metadata:
  name: micro-recipient
spec:
  selector:
    app: micro-recipient
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 8081 # the port that the service is running on in the cluster
      targetPort: 8081 # the port exposed by the container

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: micro-sender

spec:
  selector:
    matchLabels:
      app: micro-sender
  replicas: 3

  template:
    metadata:
      labels:
        app: micro-sender
    spec:
      containers:
        - name: micro-sender
          image: micro-sender:lts
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8080

---
apiVersion: v1 # k8s API version
kind: Service
metadata:
  name: micro-sender
spec:
  selector:
    app: micro-sender
  ports:
    - protocol: TCP
      port: 8080 # the port that the service is running on in the cluster
      targetPort: 8080 # the port exposed by the container
  clusterIP: None

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq

spec:
  selector:
    matchLabels:
      app: rabbitmq
  replicas: 3

  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3-management-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 15672

---
apiVersion: v1 # k8s API version
kind: Service
metadata:
  name: rabbitmq
spec:
  selector:
    app: rabbitmq
  ports:
    - protocol: TCP
      port: 15672 # the port that the service is running on in the cluster
      targetPort: 15672 # the port exposed by the container
  clusterIP: None
